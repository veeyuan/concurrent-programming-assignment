/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Liow Jing Wen
 */
public class PlayerNameInput extends javax.swing.JFrame {

    /**
     * Creates new form PlayerNameInput
     */    
    private JButton nextButton;
    private JPanel centerPanel;
    private Box vBox;
    private static int noOfPlayer;
    private static int noOfPoints;
    private static int executionTime;


    public PlayerNameInput(int noOfPlayer, int  noOfPoints, int executionTime) throws FileNotFoundException, InterruptedException, ExecutionException {
        this.noOfPlayer = noOfPlayer;
        this.noOfPoints = noOfPoints;
        this.executionTime = executionTime;
        initComponents();

        //add JPanel and JButton dynamically in Box
        vBox = Box.createVerticalBox();
        centerPanel = new JPanel();
        JPanel contentPanel = (JPanel) getContentPane();
        contentPanel.setLayout(new BorderLayout());
        contentPanel.add(centerPanel, "Center");
        nextButton = new JButton("OK");
        contentPanel.add(nextButton, "South");
        centerPanel.add(vBox);
        pack();
        
        List<JTextField> nameJTextFields = new ArrayList<>();
        JTextField tempJTextField = null;
        
        //add textFields for each player based on the noOfPlayer dynamically in Box
        for(int i = 0; i < noOfPlayer; i ++){
            tempJTextField = new JTextField(20);
            tempJTextField.setName("playerNameText" + Integer.toString(i));
            nameJTextFields.add(tempJTextField);
            vBox.add(new JLabel("Player " + (i+1) + "'s name: "));
            vBox.add(tempJTextField);
            tempJTextField.setBorder(BorderFactory.createCompoundBorder(
                tempJTextField.getBorder(), 
                BorderFactory.createEmptyBorder(5, 5, 5, 5)));
            pack();           
        }

        //if 'OK' button is clicked
        nextButton.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                //initialize a list of player based on noOfPlayer
                List<Player> playerList = new ArrayList<>(noOfPlayer);
                System.out.println("Number of players created :" + noOfPlayer);      
                for(int i = 0; i < noOfPlayer; i ++){
                    String playerName = nameJTextFields.get(i).getText();
                    Player newPlayer = new Player(playerName, (i+1));
                    playerList.add(newPlayer);
                    System.out.println("Player " + (i+1) + ": " + playerList.get(i).getPlayerName()); 
                }
                System.out.println("\nNumber of points created: " + noOfPoints);
                System.out.println("Execution time (ms): " + executionTime);
                System.out.println("-----------------------------------");
                
                //intialize a new Game
                Game game = new Game(noOfPoints, noOfPlayer, executionTime, playerList);
                try {
                    game.startGame();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(PlayerNameInput.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PlayerNameInput.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(PlayerNameInput.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }            
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerNameInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerNameInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerNameInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerNameInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PlayerNameInput(noOfPlayer, noOfPoints, executionTime).setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(PlayerNameInput.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PlayerNameInput.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(PlayerNameInput.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
